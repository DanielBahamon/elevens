<div class="_progress">
  <div id="_progress-bar" class="_progress-bar"></div>
</div>
<%= link_to battle_path, class: '_close_newduel _btn button--sacnite _1 _invert' do %>
	<i class="fas fa-times button__icon"></i>
<% end %>

<%= simple_form_for([@club, @duel], class: "_steps "	)  do |f| %>
  <%= f.hidden_field :user_id, value: current_user.id %>

  <fieldset class="step active p-3">
    <!-- ... (código previo) -->
    <aside class="_content">
      <div class="_head">
        <div class="_in">
          <h1 class="display-6">Select the discipline for your duel</h1>
          <p class="lead">
            <!-- ... (texto previo) -->
          </p>
        </div>
      </div>
      <div class="_sports _options">
        <% sports = [
				  ["11-a-side", "Futbol11", 11],
				  ["10-a-side", "Futbol10", 10],
				  ["9-a-side", "Futbol9", 9],
				  ["8-a-side", "Futbol8", 8],
				  ["7-a-side", "Futbol7", 7],
				  ["6-a-side", "Futbol6", 6],
				  ["5-a-side", "Futbol5", 5],
				  ["4-a-side", "Microfutbol", 4],
				  ["3-a-side", "Bancas", 3],
				  ["2-a-side", "Kings", 2],
				  ["1-a-side", "Legends", 1],
				  ["Futvoley", "Futvoley", 3],
				  ["Futenis", "Futenis", 2]
				].reverse %>
				<% approved_members_count = @club.memberships.where(status: 1).count %>
				<div class="_sports _options">
				  <% sports.each do |sport| %>
				    <% sport_name, sport_id, members_required = sport %>
				    <% disable_sport = approved_members_count < members_required %>
				    <div class="_sport _option <% if disable_sport %> blocked <% end %>">
				      <div class="_info">
				        <div class="_data">
				          <figure class="_icon">
				            <img src="//d2ivxtccd0p0sz.cloudfront.net/assets/images/futicons/<%= sport_id %>.png">
				          </figure>
				          <div class="_description">
			          		<div class="_inner">
			          			<h5 class="m-0"><%= sport_name %></h5>
					            <p>
								      <% case sport_id %>
								        <% when "Legends" %>
								          1 x 1
								        <% when "Kings" %>
								          2 x 2
								        <% when "Bancas" %>
								          3 x 3
								        <% when "Microfutbol" %>
								          4 x 4
								        <% when "Futbol5" %>
								          5 x 5
								        <% when "Futbol6" %>
								          6 x 6
								        <% when "Futbol7" %>
								          7 x 7
								        <% when "Futbol8" %>
								          8 x 8
								        <% when "Futbol9" %>
								          9 x 9
								        <% when "Futbol10" %>
								          10 x 10
								        <% when "Futbol11" %>
								          11 x 11
								      <% end %></p>
			          		</div>
					            
				          </div>
				        </div>
				      </div>
				      	<%= f.radio_button :sport, sport_id, {class: 'form-check-input next', required: true, id: "duel_sport_#{sport_id}", disabled: disable_sport } %>
								<div class="_note">
							  <% if disable_sport %>
							    <p>You don't have enough players</p>
							  <% else %>
							    <p>Select</p>
							  <% end %>
							</div>

				    </div>
				  <% end %>
				</div>
      </div>
    </aside>
  </fieldset>
	
  <fieldset class="step p-3 _type_time">
    <!-- Paso 2: Seleccionar la fecha y hora del duelo -->
    <aside class="_back">
      <a href="#" class="_btn button--sacnite prev">
        <i class="bi bi-chevron-left"></i>
        <span>Back</span>
      </a>
    </aside>
    <aside class="_content">
      <div class="_head">
        <div class="_in">
          <h1 class="display-6">Select the type of duel</h1>
        </div>
      </div>
      <div class="_body">
				<div class="_sports _options">
					<% type_times = [
						["Instant", "Instant", 0],
						["Schedule", "Schedule", 1]
					] %>
						<% type_times.each do |time| %>
							<% type_duel_name, type_duel_id = time %>
							<div class="_sport _option ">
								<div class="_info">
									<div class="_data">
										<div class="_description">
											<div class="_inner">
												<h5 class="m-0"><%= type_duel_name %></h5>
											</div>
										</div>
									</div>
								</div>
								<%= f.radio_button :time_type, type_duel_id, {class: 'form-check-input next', required: true, id: "duel_sport_#{type_duel_id}" } %>
							</div>
						<% end %>
				</div>
      </div>
      <div class="_action">
        <div class="_btns">
          <a href="#" class="button--naira _1 fit next" id="follow-button">
            <span>Next</span>
            <i class="button__icon bi bi-check2"></i>
          </a>
        </div>
      </div>

    </aside>
  </fieldset>

  <fieldset class="step p-3">
		<aside class="_back">
  		<a href="#" class="_btn button--sacnite prev">
				<i class="bi bi-chevron-left"></i>
				<span>Back</span>
			</a>
		</aside>
  	<aside class="_content _scheduled_time">
  		<div class="_head">
		    <div class="_in">
		      <h1 class="display-6">Select the date and time of your duel</h1>
		      <p class="lead">Great! You've already chosen the discipline for your duel. Now, we need to know the date and time of your duel. Please select a date and time that works for you and your team. Make sure to choose a date that allows enough time to prepare for the duel.</p>
		    </div>
		  </div>
		  <div class="_body">
	      <div class="input-group mb-3">
	        <%= f.datetime_field :start_date, placeholder: "DD/MM/AAAA", class: "form-control _process", id: "start-date" %>
	      </div>
		  </div>
		  <div class="_foot"></div>
			<div class="_action">
				<div></div>
				<div class="_btns">
			    <a href="#" class="button--naira _1 fit next" id="follow-button">
			    	<span>Next</span>
						<i class="button__icon bi bi-check2"></i>
			  	</a>
				</div>
			</div>
  	</aside>
		<aside class="_content _type_time_start">
			<div class="_head">
				<div class="_in">
					<h1 class="display-6">How much time do you need?</h1>
				</div>
			</div>
			<div class="_body">
				<div class="_sports _options">
					<% ready_times = [
						["15 min", 15],
						["30 min", 30],
						["1 hour", 60],
						["2 hours", 120],
						["3 hours", 180],
						["4 hours", 240],
						["5 hours", 300],
						["6 hours", 360]
					] %>
					<% ready_times.each do |ready_time| %>
						<% ready_time_name, ready_time_minutes = ready_time %>
						<div class="_sport _option ">
							<div class="_info">
								<div class="_data">
									<div class="_description">
										<div class="_inner">
											<h5 class="m-0"><%= ready_time_name %></h5>
										</div>
									</div>
								</div>
							</div>
							<%= f.radio_button :start_date, DateTime.now + ready_time_minutes.minutes, {class: 'form-check-input next', required: true, id: "ready_time_#{ready_time_minutes}" } %>
						</div>
					<% end %>
					<%= f.hidden_field :start_date, id: "start-date" %>
					<script type="text/javascript">
						$(function() {
							const hiddenStartDate = $('#start-date');

							$('input[type=radio][name="duel[start_date]"]').change(function() {
								const selectedTime = parseInt($(this).val());
								if (isNaN(selectedTime)) {
									console.error('El tiempo seleccionado no es válido');
									return;
								}

								const start = new Date(selectedTime * 1000); // Convertir a milisegundos
								hiddenStartDate.val(start.toISOString().slice(0, 16));
							});
						});
					</script>
				</div>
			</div>
			<div class="_action">
				<div class="_btns">
					<a href="#" class="button--naira _1 fit next" id="follow-button">
						<span>Next</span>
						<i class="button__icon bi bi-check2"></i>
					</a>
				</div>
			</div>
		</aside>
  </fieldset>
  
  <fieldset class="step p-3">
		<aside class="_back">
  		<a href="#" class="_btn button--sacnite prev">
				<i class="bi bi-chevron-left"></i>
			</a>
		</aside>
		<aside class="_content">
			<div class="_head">
				<div class="_in">
				  <h1 class="display-6">Determine the duration of the duel</h1>
				  <p class="lead">Great! Now, we need to determine how long the duel will last. Select the duration of the duel in minutes to ensure that both teams have enough time to compete and demonstrate their skills:</p>
				</div>
		  </div>
	    <div class="_body">
	      <div class="mb-3">
	      	<div class="_inputactions">
	      		<a href="#" class="_btn button--sacnite _btn-minus-time">
		      		<i class="bi bi-dash"></i>
						</a>
						<div class="_input_number">
							<%= f.number_field :duration_time, placeholder: "1", class: "form-control _process", id: "duration-time", min: "30", placeholder: "90", max: "360" %>
							<div class="_block"></div>
						</div>
						<a href="#" class="_btn button--sacnite _btn-plus-time">
		      		<i class="bi bi-plus-lg"></i>
						</a>
	      	</div>
	    		<%= f.datetime_field :end_date, id: "end-date", class: "_process d-none" %>
	      </div>
	    </div>
			<div class="_foot">
			  <div class="alert alert-info" role="alert">
				  Every minute counts! Enter the approximate duration of your duel in minutes. Remember it must be at least 30 minutes, but no more than 6 hours (360 minutes) for your duel to be valid.
				</div>
			</div>
			<div class="_action">
				<div></div>
				<div class="_btns">
			    <a href="#" class="button--naira _1 fit _btnnext next">
			    	<span>Next</span>
						<i class="button__icon bi bi-check2"></i>
			  	</a>
				</div>
			</div>
		</aside>
  </fieldset>
  
  <fieldset class="step p-3">
		<aside class="_back">
  		<a href="#" class="_btn button--sacnite prev">
				<i class="bi bi-chevron-left"></i>
			</a>
		</aside>
		<aside class="_content">
			<div class="_head">
				<div class="_in">
				  <h1 class="display-6">Do you want a referee for your duel?</h1>
				  <p class="lead">In this step, you must decide if you want a referee for your duel. A referee can help ensure that the game is fair and safe for all participants.</p>
				</div>
		  </div>
		  <div class="_body">
				<div class="_referees _options">
		    	<% referees = [["Solicitar un arbitro", true ], ["Sin arbitro", false]] %>
			    <% referees.each do |referee| %>
			      <div class="_referee _option">
		      		<div class="_info">
		      			<div class="_data">
		      				<figure class="_icon">
			      				<img src="//d2ivxtccd0p0sz.cloudfront.net/assets/images/futicons/<%= referee[0].downcase.gsub(" ", "-") %>.png">
			      			</figure>
			      			<div class="_data">
			      				<h5 class="m-0"><%= referee[0] %></h5>
				      			<p></p>
			      			</div>
		      			</div>
		      			<div class="_action">
				    			<i class="far fa-arrow-right"></i>
				    		</div>
		      		</div>
							<%= f.radio_button :referee, referee[1], {class: 'next', required: true, id: "duel_referee_#{referee[1]}" } %>
			      </div>
					<% end %>
				</div>
		  </div>
			<div class="_foot">
				  <div class="alert alert-info" role="alert">
					  If you choose not to have a referee, make sure to read and understand the additional responsibilities you will have as a captain.
					</div>
			</div>
		</aside>
  </fieldset>
  
  <fieldset class="step p-3">
		<aside class="_back">
  		<a href="#" class="_btn button--sacnite prev">
				<i class="bi bi-chevron-left"></i>
			</a>
		</aside>
		<aside class="_content">
			<div class="_head">
				<div class="_in">
				  <h1 class="display-6">Do you want your duel to be friendly or for a bet?</h1>
				  <p class="lead">In this step, you must decide if you want your duel to be friendly or for a bet. Select an option below:</p>
				</div>
		  </div>
		  <div class="_body">
				<div class="_types _options">
		    	<% types = [["Duelo amistoso", "Friendly"], ["Duelo de apuesta", "Bet"]] %>
			    <% types.each do |type| %>
			      <div class="_type _option">
		      		<div class="_info">
		      			<div class="_data">
		      				<figure class="_icon">
			      				<img src="//d2ivxtccd0p0sz.cloudfront.net/assets/images/futicons/<%= type[1] %>.png">
			      			</figure>
			      			<div class="_data">
			      				<h5 class="m-0"><%= type[0] %></h5>
				      			<p></p>
			      			</div>
		      			</div>
		      			<div class="_action">
				    			<i class="far fa-arrow-right"></i>
				    		</div>
		      		</div>
							<%= f.radio_button :duel_type, type[1], {class: 'next', required: true, id: "duel_type_#{type[1]}" } %>
			      </div>
					<% end %>
				</div>
		  </div>
			<div class="_foot">
			  <div class="alert alert-info" role="alert">
				  If you choose a bet duel, please note that bet duels are not available in all locations and are subject to local laws and regulations.
				</div>
			</div>
		</aside>
  </fieldset>

  <fieldset class="step p-3">
		<aside class="_back">
  		<a href="#" class="_btn button--sacnite prev">
				<i class="bi bi-chevron-left"></i>
			</a>
		</aside>
		<aside class="_content">
			<div class="_head">
				<div class="_in">
				  <h1 class="display-6">Additional responsibilities as a captain</h1>
				  <p class="lead">If you choose not to have a referee for your duel, it's important to understand that you and the other captain will be responsible for ensuring that the game is fair and that the rules are respected. In case of any conflict, penalties will be applied to the team and both captains. Please confirm that you understand these additional responsibilities before continuing:</p>
				</div>
		  </div>
		  <div class="_body"></div>
		  <div class="_foot"></div>
			<div class="_action">
				<div></div>
				<div class="_btns">
	    		<button type="submit" class="button--naira _1 fit _btnnext">
			    	<span>Create duel</span>
						<i class="button__icon bi bi-check2-all"></i>
	    		</button>
				</div>
			</div>
		</aside>
  </fieldset>

<% end %>


<script type="text/javascript">

	/* ==================== INSTANT O SCHEDULE ===================== */

		$(function() {
			const scheduledTimeContent = $('._content._scheduled_time');
			const typeTimeStartContent = $('._content._type_time_start');
		
			$('input[type=radio][name="duel[time_type]"]').change(function() {
				const selectedTimeType = $(this).val();
		
				if (selectedTimeType === 'Schedule') {
					scheduledTimeContent.show();
					typeTimeStartContent.remove();
				} else if (selectedTimeType === 'Instant') {
					typeTimeStartContent.show();
					scheduledTimeContent.remove();
				}
			});
		});	
	/* =================== END INSTANT O SCHEDULE ============== */
	
	/* =================== DATETIME I====================== */

		$(function() {
			const startDate = $('#start-date');
			const hiddenStartDate = $('#hidden-start-date');
			const durationHours = $('#duration-time');
			const endDate = $('#end-date');
		
			$('input[type=radio][name="duel[start_date]"]').change(function() {
				const selectedTime = parseInt($(this).val());
				if (isNaN(selectedTime)) {
					console.error('El tiempo seleccionado no es válido');
					return;
				}
		
				const start = new Date();
				start.setUTCMinutes(start.getUTCMinutes() + selectedTime);
				hiddenStartDate.val(start.toISOString().slice(0, 16));
				startDate.val(start.toISOString().slice(0, 16));
				updateEndDate();
			});
		
			function updateEndDate() {
				if (!startDate.val()) {
					console.error('La fecha de inicio no está establecida');
					return;
				}
		
				const start = new Date(startDate.val());
				const duration = parseInt(durationHours.val());
				if (isNaN(start.getTime())) {
					console.error('La fecha de inicio no es válida');
					return;
				}
				if (isNaN(duration)) {
					console.error('La duración no es válida');
					return;
				}
		
				// No restar 5 horas aquí
				const end = new Date(start.getTime() + duration * 60 * 1000);
				endDate.val(end.toISOString().slice(0, 16));
			}
		
			durationHours.on('input', updateEndDate);
		});

	/* ================== END DATETIME I ====================== */
	
	/* ================== DATETIME II ======================= */
		
		$(function() {
			const startDate = $('#start-date');
			const durationHours = $('#duration-time');
			const endDate = $('#end-date');
		
			// Validar los campos de fecha y duración antes de crear la fecha final
			function updateEndDate() {
				if (!startDate.val()) {
					console.error('La fecha de inicio no está establecida');
					return;
				}
		
				const start = new Date(startDate.val());
				const duration = parseInt(durationHours.val());
				if (isNaN(start.getTime())) {
					console.error('La fecha de inicio no es válida');
					return;
				}
				if (isNaN(duration)) {
					console.error('La duración no es válida');
					return;
				}
		
				start.setHours(start.getHours() - 5); // Establecer la zona horaria en Colombia
				const end = new Date(start.getTime() + duration * 60 * 1000);
				endDate.val(end.toISOString().slice(0, 16));
			}
		
			durationHours.on('input', updateEndDate);
		
			$('._btn-minus-time').on('click', function() {
				var val = parseInt(durationHours.val()) || 30;
				val = Math.max(30, val - 10); // Establecer un mínimo de 30 minutos
				durationHours.val(val);
				updateEndDate();
			});
		
			$('._btn-plus-time').on('click', function() {
				var val = parseInt(durationHours.val()) || 360;
				val = Math.min(360, val + 10); // Establecer un máximo de 360 minutos
				durationHours.val(val);
				updateEndDate();
			});
		});

	/* ==================== END DATETIME II ===================== */
	
	/* ==================== INPUT RADIO =================== */

		document.querySelectorAll('._option input[type="radio"]').forEach(function(radio) {
			radio.addEventListener('click', function() {
				document.querySelectorAll('._option').forEach(function(sport) {
				sport.classList.remove('selected');
				});
				this.closest('._option').classList.add('selected');
			});
		});

	/* ==================== END INPUT RADIO ===================== */
	
	/* ==================== BARRA DE PROGRESO ===================== */
			$(document).ready(function() {
				var currentStep = 0;
				var $form = $('#new_duel');
				var $steps = $form.find('.step');
				var numSteps = $steps.length;
				var $progressBar = $('._progress-bar');
				var $fields = $form.find('input._process');
				var numFields = $fields.length;

				function showStep(step) {
					$steps.removeClass('active');
					$steps.eq(step).addClass('active');
					if (step === 0) {
					$form.find('.prev').hide();
					} else {
					$form.find('.prev').show();
					}
					if (step === numSteps - 1) {
					$form.find('.next').hide();
					} else {
					$form.find('.next').show();
					}
				}

				showStep(currentStep);

				$form.find('.next').click(function() {
					var $currentStep = $steps.eq(currentStep);
					var isValid = true;

					$currentStep.find('input, select').each(function() {
					if ($(this).prop('required') && $(this).val() === '') {
						isValid = false;
						$(this).addClass('error');
					} else {
						$(this).removeClass('error');
					}
					});

					// Check if all inputs with class "_process" are completed
					var $requiredFields = $currentStep.find('input._process');
					$requiredFields.each(function() {
					if ($(this).val() === '') {
						isValid = false;
						$(this).addClass('error');
					} else {
						$(this).removeClass('error');
					}
					});

					if (isValid) {
					$currentStep.fadeOut(500).promise().done(function() {
						currentStep++;
						showStep(currentStep);
						$steps.eq(currentStep).fadeIn(500);
					});
					}
				});

				$form.find('.prev').click(function() {
					$steps.eq(currentStep).fadeOut(500).promise().done(function() {
					currentStep--;
					showStep(currentStep);
					$steps.eq(currentStep).fadeIn(500);
					});
				});

				function updateProgress() {
					var numCompletedFields = $fields.filter(function() {
					return $(this).val() !== '';
					}).length;

					var percent = parseFloat((100 / numFields) * numCompletedFields).toFixed(2);
					$progressBar.attr('aria-valuenow', percent).css('width', numCompletedFields + '%');
				}

				$fields.change(function() {
					updateProgress();
				});

				// Call updateProgress initially to set the progress bar to 0%
				updateProgress();
			});

			function updateProgressBar() {
				var steps = document.querySelectorAll('.step');
				var progress = document.getElementById('_progress-bar');
				var stepCount = steps.length;
				var currentStep = 0;

				// Encontrar el paso actual
				for (var i = 0; i < steps.length; i++) {
					if (steps[i].classList.contains('active')) {
					currentStep = i;
					break;
					}
				}

				// Actualizar la barra de progreso
				var percent = ((currentStep + 1) / stepCount) * 100;
				progress.style.width = percent + '%';
			}

			var nextButtons = document.querySelectorAll('.next');
				for (var i = 0; i < nextButtons.length; i++) {
				nextButtons[i].addEventListener('click', function() {
					updateProgressBar();
				});
			}

	/* ==================== END BARRA DE PROGRESO ===================== */
	
	/* ==================== FOR INPUT ===================== */

		$(document).ready(function() {
			$('form input').keypress(function(e) {
				if (e.which == 13) {
				e.preventDefault();
				return false;
				}
			});
		});

	/* ==================== END FOR INPUT ==================== */

</script>