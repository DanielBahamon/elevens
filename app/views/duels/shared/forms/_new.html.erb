<div class="_progress">
  <div id="_progress-bar" class="_progress-bar"></div>
</div>
<%= link_to battle_path, class: '_close_newduel _btn button--sacnite _1 _invert' do %>
	<i class="fas fa-times button__icon"></i>
<% end %>

<%= simple_form_for([@club, @duel], class: "_steps "	)  do |f| %>
  <%= f.hidden_field :user_id, value: current_user.id %>

  <fieldset class="step active p-3">
    <!-- ... (código previo) -->
    <aside class="_content">
      <div class="_head">
        <div class="_in">
          <h1 class="display-6">Selecciona la disciplina para tu duelo</h1>
          <p class="lead">
            <!-- ... (texto previo) -->
          </p>
        </div>
      </div>
      <div class="_sports _options">
        <% sports = [
				  ["Futbol 11", "Futbol11", 11],
				  ["Futbol 10", "Futbol10", 10],
				  ["Futbol 9", "Futbol9", 9],
				  ["Futbol 8", "Futbol8", 8],
				  ["Futbol 7", "Futsal7", 7],
				  ["Futsal", "Futsal", 6],
				  ["Microfutbol", "Microfutbol", 5],
				  ["Bancas", "Bancas", 4],
				  ["Kings", "Kings", 2],
				  ["Legends", "Legends", 1]
				].reverse %>
				<% approved_members_count = @club.memberships.where(status: 1).count %>
				<div class="_sports _options">
				  <% sports.each do |sport| %>
				    <% sport_name, sport_id, members_required = sport %>
				    <% disable_sport = approved_members_count < members_required %>
				    <div class="_sport _option <% if disable_sport %> blocked <% end %>">
				      <div class="_info">
				        <div class="_data">
				          <figure class="_icon">
				            <img src="//d2ivxtccd0p0sz.cloudfront.net/assets/images/futicons/<%= sport_id %>.png">
				          </figure>
				          <div class="_description">
			          		<div class="_inner">
			          			<h5 class="m-0"><%= sport_name %></h5>
					            <p>
								      <% case sport_id %>
								        <% when "Legends" %>
								          1 x 1
								        <% when "Kings" %>
								          2 x 2
								        <% when "Futenis" %>
								          2 x 2
								        <% when "Futvoley" %>
								          2 x 2
								        <% when "Bancas" %>
								          4 x 4
								        <% when "Microfutbol" %>
								          5 x 5
								        <% when "Futsal" %>
								          6 x 6
								        <% when "Futbol7" %>
								          7 x 7
								        <% when "Futbol8" %>
								          8 x 8
								        <% when "Futbol9" %>
								          9 x 9
								        <% when "Futbol10" %>
								          10 x 10
								        <% when "Futbol11" %>
								          11 x 11
								      <% end %></p>
			          		</div>
					            
				          </div>
				        </div>
				      </div>
				      <%= f.radio_button :sport, sport_id, {class: 'form-check-input next', required: true, id: "duel_sport_#{sport_id}", disabled: disable_sport } %>
								<div class="_note">
							  <% if disable_sport %>
							    <p>No tienes jugadores suficientes</p>
							  <% else %>
							    <p>Seleccionar</p>
							  <% end %>
							</div>

				    </div>
				  <% end %>
				</div>
      </div>
    </aside>
  </fieldset>
	
  <fieldset class="step p-3 _type_time">
    <!-- Paso 2: Seleccionar la fecha y hora del duelo -->
    <aside class="_back">
      <a href="#" class="_btn button--sacnite prev">
        <i class="bi bi-chevron-left"></i>
        <span>Volver</span>
      </a>
    </aside>
    <aside class="_content">
      <div class="_head">
        <div class="_in">
          <h1 class="display-6">Selecciona el tipo de duelo</h1>
        </div>
      </div>
      <div class="_body">
				<div class="_sports _options">
					<% type_times = [
						["Instantaneo", "Instant", 0],
						["Programar duelo", "Schedule", 1]
					] %>
						<% type_times.each do |time| %>
							<% type_duel_name, type_duel_id = time %>
							<div class="_sport _option ">
								<div class="_info">
									<div class="_data">
										<div class="_description">
											<div class="_inner">
												<h5 class="m-0"><%= type_duel_name %></h5>
											</div>
										</div>
									</div>
								</div>
								<%= f.radio_button :time_type, type_duel_id, {class: 'form-check-input next', required: true, id: "duel_sport_#{type_duel_id}" } %>
							</div>
						<% end %>
				</div>
      </div>
      <div class="_action">
        <div class="_btns">
          <a href="#" class="button--naira _1 fit next" id="follow-button">
            <span>Siguiente</span>
            <i class="button__icon bi bi-check2"></i>
          </a>
        </div>
      </div>

    </aside>
  </fieldset>

  <fieldset class="step p-3">
		<aside class="_back">
  		<a href="#" class="_btn button--sacnite prev">
				<i class="bi bi-chevron-left"></i>
				<span>Volver</span>
			</a>
		</aside>
  	<aside class="_content _scheduled_time">
  		<div class="_head">
		    <div class="_in">
		      <h1 class="display-6">Selecciona la fecha y hora de tu duelo</h1>
		      <p class="lead">¡Genial! Ya elegiste la disciplina para tu duelo. Ahora, necesitamos saber la fecha y hora de tu duelo. Por favor, selecciona una fecha y hora que funcione para ti y tu equipo. Asegúrate de elegir una fecha que permita suficiente tiempo para prepararte para el duelo.</p>
		    </div>
		  </div>
		  <div class="_body">
	      <div class="input-group mb-3">
	        <%= f.datetime_field :start_date, placeholder: "DD/MM/AAAA", class: "form-control _process", id: "start-date" %>
	      </div>
		  </div>
		  <div class="_foot"></div>
			<div class="_action">
				<div></div>
				<div class="_btns">
			    <a href="#" class="button--naira _1 fit next" id="follow-button">
			    	<span>Siguiente</span>
						<i class="button__icon bi bi-check2"></i>
			  	</a>
				</div>
			</div>
  	</aside>
		<aside class="_content _type_time_start">
			<div class="_head">
				<div class="_in">
					<h1 class="display-6">¿En cuánto tiempo estás listo?</h1>
				</div>
			</div>
			<div class="_body">
				<div class="_sports _options">
					<% ready_times = [
						["En 15 minutos", 15],
						["En media hora", 30],
						["En 1 hora", 60],
						["En 2 horas", 120],
						["En 3 horas", 180],
						["En 4 horas", 240],
						["En 5 horas", 300],
						["En 6 horas", 360]
					] %>
					<% ready_times.each do |ready_time| %>
						<% ready_time_name, ready_time_minutes = ready_time %>
						<div class="_sport _option ">
							<div class="_info">
								<div class="_data">
									<div class="_description">
										<div class="_inner">
											<h5 class="m-0"><%= ready_time_name %></h5>
										</div>
									</div>
								</div>
							</div>
							<%= f.radio_button :start_date, DateTime.now + ready_time_minutes.minutes, {class: 'form-check-input next', required: true, id: "ready_time_#{ready_time_minutes}" } %>
						</div>
					<% end %>
					<%= f.hidden_field :start_date, id: "start-date" %>
					<script type="text/javascript">
						$(function() {
							const hiddenStartDate = $('#start-date');

							$('input[type=radio][name="duel[start_date]"]').change(function() {
								const selectedTime = parseInt($(this).val());
								if (isNaN(selectedTime)) {
									console.error('El tiempo seleccionado no es válido');
									return;
								}

								const start = new Date(selectedTime * 1000); // Convertir a milisegundos
								hiddenStartDate.val(start.toISOString().slice(0, 16));
							});
						});
					</script>
				</div>
			</div>
			<div class="_action">
				<div class="_btns">
					<a href="#" class="button--naira _1 fit next" id="follow-button">
						<span>Siguiente</span>
						<i class="button__icon bi bi-check2"></i>
					</a>
				</div>
			</div>
		</aside>
  </fieldset>
  
  <fieldset class="step p-3">
		<aside class="_back">
  		<a href="#" class="_btn button--sacnite prev">
				<i class="bi bi-chevron-left"></i>
			</a>
		</aside>
		<aside class="_content">
			<div class="_head">
				<div class="_in">
				  <h1 class="display-6">Determina la duración del duelo</h1>
				  <p class="lead">¡Estupendo! Ahora, necesitamos determinar cuánto tiempo tomará el duelo. Selecciona la duración del duelo en minutos para asegurarte de que ambos equipos tengan tiempo suficiente para competir y demostrar su habilidad:</p>
				</div>
		  </div>
	    <div class="_body">
	      <div class="mb-3">
	      	<div class="_inputactions">
	      		<a href="#" class="_btn button--sacnite _btn-minus-time">
		      		<i class="bi bi-dash"></i>
						</a>
						<div class="_input_number">
							<%= f.number_field :duration_time, placeholder: "1", class: "form-control _process", id: "duration-time", min: "30", placeholder: "90", max: "360" %>
							<div class="_block"></div>
						</div>
						<a href="#" class="_btn button--sacnite _btn-plus-time">
		      		<i class="bi bi-plus-lg"></i>
						</a>
	      	</div>
	    		<%= f.datetime_field :end_date, id: "end-date", class: "_process d-none" %>
	      </div>
	    </div>
			<div class="_foot">
			  <div class="alert alert-info" role="alert">
				  ¡Cada minuto cuenta! Ingresa la duración aproximada de tu duelo en minutos. Recuerda que deben ser al menos 30 minutos, pero no más de 6 horas (360 minutos) para que tu duelo sea válido.
				</div>
			</div>
			<div class="_action">
				<div></div>
				<div class="_btns">
			    <a href="#" class="button--naira _1 fit _btnnext next">
			    	<span>Siguiente</span>
						<i class="button__icon bi bi-check2"></i>
			  	</a>
				</div>
			</div>
		</aside>
  </fieldset>
  
  <fieldset class="step p-3">
		<aside class="_back">
  		<a href="#" class="_btn button--sacnite prev">
				<i class="bi bi-chevron-left"></i>
			</a>
		</aside>
		<aside class="_content">
			<div class="_head">
				<div class="_in">
				  <h1 class="display-6">¿Deseas un árbitro para tu duelo?</h1>
				  <p class="lead">En este paso, debes decidir si deseas un árbitro para tu duelo. Un árbitro puede ayudar a garantizar que el juego sea justo y seguro para todos los participantes. </p>
				</div>
		  </div>
		  <div class="_body">
				<div class="_referees _options">
		    	<% referees = [["Solicitar un arbitro", true ], ["Sin arbitro", false]] %>
			    <% referees.each do |referee| %>
			      <div class="_referee _option">
		      		<div class="_info">
		      			<div class="_data">
		      				<figure class="_icon">
			      				<img src="//d2ivxtccd0p0sz.cloudfront.net/assets/images/futicons/<%= referee[0].downcase.gsub(" ", "-") %>.png">
			      			</figure>
			      			<div class="_data">
			      				<h5 class="m-0"><%= referee[0] %></h5>
				      			<p></p>
			      			</div>
		      			</div>
		      			<div class="_action">
				    			<i class="far fa-arrow-right"></i>
				    		</div>
		      		</div>
							<%= f.radio_button :referee, referee[1], {class: 'next', required: true, id: "duel_referee_#{referee[1]}" } %>
			      </div>
					<% end %>
				</div>
		  </div>
			<div class="_foot">
				  <div class="alert alert-info" role="alert">
					  Si decides no tener un árbitro, asegúrate de leer y entender las responsabilidades adicionales que tendrás como capitán. 
					</div>
			</div>
		</aside>
  </fieldset>
  
  <fieldset class="step p-3">
		<aside class="_back">
  		<a href="#" class="_btn button--sacnite prev">
				<i class="bi bi-chevron-left"></i>
			</a>
		</aside>
		<aside class="_content">
			<div class="_head">
				<div class="_in">
				  <h1 class="display-6">¿Deseas que tu duelo sea amistoso o de apuesta?</h1>
				  <p class="lead">En este paso, debes decidir si deseas que tu duelo sea amistoso o de apuesta. Selecciona una opción a continuación: </p>
				</div>
		  </div>
		  <div class="_body">
				<div class="_types _options">
		    	<% types = [["Duelo amistoso", "Friendly"], ["Duelo de apuesta", "Bet"]] %>
			    <% types.each do |type| %>
			      <div class="_type _option">
		      		<div class="_info">
		      			<div class="_data">
		      				<figure class="_icon">
			      				<img src="//d2ivxtccd0p0sz.cloudfront.net/assets/images/futicons/<%= type[1] %>.png">
			      			</figure>
			      			<div class="_data">
			      				<h5 class="m-0"><%= type[0] %></h5>
				      			<p></p>
			      			</div>
		      			</div>
		      			<div class="_action">
				    			<i class="far fa-arrow-right"></i>
				    		</div>
		      		</div>
							<%= f.radio_button :duel_type, type[1], {class: 'next', required: true, id: "duel_type_#{type[1]}" } %>
			      </div>
					<% end %>
				</div>
		  </div>
			<div class="_foot">
			  <div class="alert alert-info" role="alert">
				  Si eliges un duelo de apuesta por favor, ten en cuenta que los duelos de apuesta no están disponibles en todas las ubicaciones y están sujetos a las leyes y regulaciones locales.
				</div>
			</div>
		</aside>
  </fieldset>

  <fieldset class="step p-3">
		<aside class="_back">
  		<a href="#" class="_btn button--sacnite prev">
				<i class="bi bi-chevron-left"></i>
			</a>
		</aside>
		<aside class="_content">
			<div class="_head">
				<div class="_in">
				  <h1 class="display-6">Responsabilidades adicionales como capitán</h1>
				  <p class="lead">Si decides no tener un árbitro para tu duelo, es importante que entiendas que tú y el otro capitán serán responsables de garantizar que el juego sea justo y que se respeten las reglas. En caso de cualquier conflicto, se aplicarán sanciones al equipo y a ambos capitanes. Por favor, confirma que entiendes estas responsabilidades adicionales antes de continuar:</p>
				</div>
		  </div>
		  <div class="_body"></div>
		  <div class="_foot"></div>
			<div class="_action">
				<div></div>
				<div class="_btns">
	    		<button type="submit" class="button--naira _1 fit _btnnext">
			    	<span>Crear duelo</span>
						<i class="button__icon bi bi-check2-all"></i>
	    		</button>
				</div>
			</div>
		</aside>
  </fieldset>

<% end %>


<script type="text/javascript">

	/* ==================== INSTANT O SCHEDULE ===================== */

		$(function() {
			const scheduledTimeContent = $('._content._scheduled_time');
			const typeTimeStartContent = $('._content._type_time_start');
		
			$('input[type=radio][name="duel[time_type]"]').change(function() {
				const selectedTimeType = $(this).val();
		
				if (selectedTimeType === 'Schedule') {
					scheduledTimeContent.show();
					typeTimeStartContent.remove();
				} else if (selectedTimeType === 'Instant') {
					typeTimeStartContent.show();
					scheduledTimeContent.remove();
				}
			});
		});	
	/* =================== END INSTANT O SCHEDULE ============== */
	
	/* =================== DATETIME I====================== */

		$(function() {
			const startDate = $('#start-date');
			const hiddenStartDate = $('#hidden-start-date');
			const durationHours = $('#duration-time');
			const endDate = $('#end-date');
		
			$('input[type=radio][name="duel[start_date]"]').change(function() {
				const selectedTime = parseInt($(this).val());
				if (isNaN(selectedTime)) {
					console.error('El tiempo seleccionado no es válido');
					return;
				}
		
				const start = new Date();
				start.setUTCMinutes(start.getUTCMinutes() + selectedTime);
				hiddenStartDate.val(start.toISOString().slice(0, 16));
				startDate.val(start.toISOString().slice(0, 16));
				updateEndDate();
			});
		
			function updateEndDate() {
				if (!startDate.val()) {
					console.error('La fecha de inicio no está establecida');
					return;
				}
		
				const start = new Date(startDate.val());
				const duration = parseInt(durationHours.val());
				if (isNaN(start.getTime())) {
					console.error('La fecha de inicio no es válida');
					return;
				}
				if (isNaN(duration)) {
					console.error('La duración no es válida');
					return;
				}
		
				// No restar 5 horas aquí
				const end = new Date(start.getTime() + duration * 60 * 1000);
				endDate.val(end.toISOString().slice(0, 16));
			}
		
			durationHours.on('input', updateEndDate);
		});

	/* ================== END DATETIME I ====================== */
	
	/* ================== DATETIME II ======================= */
		
		$(function() {
			const startDate = $('#start-date');
			const durationHours = $('#duration-time');
			const endDate = $('#end-date');
		
			// Validar los campos de fecha y duración antes de crear la fecha final
			function updateEndDate() {
				if (!startDate.val()) {
					console.error('La fecha de inicio no está establecida');
					return;
				}
		
				const start = new Date(startDate.val());
				const duration = parseInt(durationHours.val());
				if (isNaN(start.getTime())) {
					console.error('La fecha de inicio no es válida');
					return;
				}
				if (isNaN(duration)) {
					console.error('La duración no es válida');
					return;
				}
		
				start.setHours(start.getHours() - 5); // Establecer la zona horaria en Colombia
				const end = new Date(start.getTime() + duration * 60 * 1000);
				endDate.val(end.toISOString().slice(0, 16));
			}
		
			durationHours.on('input', updateEndDate);
		
			$('._btn-minus-time').on('click', function() {
				var val = parseInt(durationHours.val()) || 30;
				val = Math.max(30, val - 10); // Establecer un mínimo de 30 minutos
				durationHours.val(val);
				updateEndDate();
			});
		
			$('._btn-plus-time').on('click', function() {
				var val = parseInt(durationHours.val()) || 360;
				val = Math.min(360, val + 10); // Establecer un máximo de 360 minutos
				durationHours.val(val);
				updateEndDate();
			});
		});

	/* ==================== END DATETIME II ===================== */
	
	/* ==================== INPUT RADIO =================== */

		document.querySelectorAll('._option input[type="radio"]').forEach(function(radio) {
			radio.addEventListener('click', function() {
				document.querySelectorAll('._option').forEach(function(sport) {
				sport.classList.remove('selected');
				});
				this.closest('._option').classList.add('selected');
			});
		});

	/* ==================== END INPUT RADIO ===================== */
	
	/* ==================== BARRA DE PROGRESO ===================== */
			$(document).ready(function() {
				var currentStep = 0;
				var $form = $('#new_duel');
				var $steps = $form.find('.step');
				var numSteps = $steps.length;
				var $progressBar = $('._progress-bar');
				var $fields = $form.find('input._process');
				var numFields = $fields.length;

				function showStep(step) {
					$steps.removeClass('active');
					$steps.eq(step).addClass('active');
					if (step === 0) {
					$form.find('.prev').hide();
					} else {
					$form.find('.prev').show();
					}
					if (step === numSteps - 1) {
					$form.find('.next').hide();
					} else {
					$form.find('.next').show();
					}
				}

				showStep(currentStep);

				$form.find('.next').click(function() {
					var $currentStep = $steps.eq(currentStep);
					var isValid = true;

					$currentStep.find('input, select').each(function() {
					if ($(this).prop('required') && $(this).val() === '') {
						isValid = false;
						$(this).addClass('error');
					} else {
						$(this).removeClass('error');
					}
					});

					// Check if all inputs with class "_process" are completed
					var $requiredFields = $currentStep.find('input._process');
					$requiredFields.each(function() {
					if ($(this).val() === '') {
						isValid = false;
						$(this).addClass('error');
					} else {
						$(this).removeClass('error');
					}
					});

					if (isValid) {
					$currentStep.fadeOut(500).promise().done(function() {
						currentStep++;
						showStep(currentStep);
						$steps.eq(currentStep).fadeIn(500);
					});
					}
				});

				$form.find('.prev').click(function() {
					$steps.eq(currentStep).fadeOut(500).promise().done(function() {
					currentStep--;
					showStep(currentStep);
					$steps.eq(currentStep).fadeIn(500);
					});
				});

				function updateProgress() {
					var numCompletedFields = $fields.filter(function() {
					return $(this).val() !== '';
					}).length;

					var percent = parseFloat((100 / numFields) * numCompletedFields).toFixed(2);
					$progressBar.attr('aria-valuenow', percent).css('width', numCompletedFields + '%');
				}

				$fields.change(function() {
					updateProgress();
				});

				// Call updateProgress initially to set the progress bar to 0%
				updateProgress();
			});

			function updateProgressBar() {
				var steps = document.querySelectorAll('.step');
				var progress = document.getElementById('_progress-bar');
				var stepCount = steps.length;
				var currentStep = 0;

				// Encontrar el paso actual
				for (var i = 0; i < steps.length; i++) {
					if (steps[i].classList.contains('active')) {
					currentStep = i;
					break;
					}
				}

				// Actualizar la barra de progreso
				var percent = ((currentStep + 1) / stepCount) * 100;
				progress.style.width = percent + '%';
			}

			var nextButtons = document.querySelectorAll('.next');
				for (var i = 0; i < nextButtons.length; i++) {
				nextButtons[i].addEventListener('click', function() {
					updateProgressBar();
				});
			}

	/* ==================== END BARRA DE PROGRESO ===================== */
	
	/* ==================== FOR INPUT ===================== */

		$(document).ready(function() {
			$('form input').keypress(function(e) {
				if (e.which == 13) {
				e.preventDefault();
				return false;
				}
			});
		});

	/* ==================== END FOR INPUT ==================== */

</script>